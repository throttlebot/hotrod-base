{
  "_args": [
    [
      {
        "raw": "@quilt/quilt@file:./../../quilt/",
        "scope": "@quilt",
        "escapedName": "@quilt%2fquilt",
        "name": "@quilt/quilt",
        "rawSpec": "file:./../../quilt/",
        "spec": "/home/ubuntu/gocode/src/github.com/quilt/quilt",
        "type": "directory"
      },
      "/home/ubuntu/gocode/src/github.com/quilt/hotrod-base/quilt"
    ]
  ],
  "_from": "../../quilt",
  "_id": "@quilt/quilt@0.4.0",
  "_inCache": true,
  "_location": "/@quilt/quilt",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@quilt/quilt@file:./../../quilt/",
    "scope": "@quilt",
    "escapedName": "@quilt%2fquilt",
    "name": "@quilt/quilt",
    "rawSpec": "file:./../../quilt/",
    "spec": "/home/ubuntu/gocode/src/github.com/quilt/quilt",
    "type": "directory"
  },
  "_requiredBy": [
    "/",
    "/@quilt/haproxy"
  ],
  "_resolved": "file:../../quilt",
  "_shasum": "c47560ff178416454557c3196ae0d8ebbd4a4bae",
  "_shrinkwrap": null,
  "_spec": "@quilt/quilt@file:./../../quilt/",
  "_where": "/home/ubuntu/gocode/src/github.com/quilt/hotrod-base/quilt",
  "dependencies": {
    "fs-extra": "^4.0.1",
    "handlebars": "^4.0.10",
    "inquirer": "^3.2.1",
    "json-stable-stringify": "^1.0.1",
    "mkdirp": "^0.5.1",
    "sync-request": "^4.0.1",
    "underscore": "^1.8.3"
  },
  "description": "[![Build Status](https://travis-ci.org/quilt/quilt.svg?branch=master)](https://travis-ci.org/quilt/quilt) [![Go Report Card](https://goreportcard.com/badge/github.com/quilt/quilt)](https://goreportcard.com/report/github.com/quilt/quilt) [![Code Coverage](https://codecov.io/gh/quilt/quilt/branch/master/graph/badge.svg)](https://codecov.io/gh/quilt/quilt)",
  "devDependencies": {
    "chai": "^3.5.0",
    "chai-subset": "^1.5.0",
    "eslint": "^4.2.0",
    "eslint-config-airbnb-base": "^11.3.1",
    "eslint-plugin-import": "^2.7.0",
    "mocha": "^3.3.0",
    "mock-fs": "^4.4.1",
    "nyc": "^10.3.2",
    "rewire": "^2.5.2",
    "sinon": "^2.1.0"
  },
  "files": [
    "blueprint/bindings.js"
  ],
  "gitHead": "2558a01ef326f4d646a15e8df6b1233dda1dc5a6",
  "license": "MIT",
  "main": "blueprint/bindings.js",
  "name": "@quilt/quilt",
  "nyc": {
    "exclude": "**/*_test.js"
  },
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/quilt/quilt.svg?branch=master)](https://travis-ci.org/quilt/quilt)\n[![Go Report Card](https://goreportcard.com/badge/github.com/quilt/quilt)](https://goreportcard.com/report/github.com/quilt/quilt)\n[![Code Coverage](https://codecov.io/gh/quilt/quilt/branch/master/graph/badge.svg)](https://codecov.io/gh/quilt/quilt)\n\n# Quilt\n\nDeploying applications to the cloud can be painful. Booting virtual machines, configuring\nnetworks, and setting up databases, requires massive amounts of specialized knowledge —\nknowledge that’s scattered across documentation, blog posts, tutorials, and source code.\n\nQuilt aims to make sharing this knowledge simple by encoding it in JavaScript.  Just as\ndevelopers package, share, and reuse application code, Quilt’s JavaScript framework makes\nit possible to package, share, and reuse the knowledge necessary to run applications in\nthe cloud.\n\nTo take this knowledge into production, simply `quilt run` the JavaScript blueprint of\nyour application. Quilt will set up virtual machines, configure a secure network, install\ncontainers, and whatever else is needed to get up and running smoothly on your favorite\ncloud provider.\n\n## Deploy Quickly on...\n\n![providers](./docs/source/images/providers.png)\n\n## Install\n\nInstall Quilt with npm:\n\n```bash\n$ npm install -g @quilt/install\n```\nCheck out more in our [Getting Started Guide](http://docs.quilt.io/#getting-started).\n\n## API\n\nRun any container.\n\n[//]: # (b1)\n<!-- const {Container, LoadBalancer, Machine, allow, publicInternet} = require('@quilt/quilt'); -->\n```javascript\nlet web = new Container('web', 'someNodejsImage');\n```\n\nLoad balance traffic.\n\n[//]: # (b1)\n```javascript\nlet webGroup = web.replicate(3);\nlet webLoadBalancer = new LoadBalancer('web-lb', webGroup); // A load balancer over 3 containers.\n```\n\nShare and import blueprints via npm.\n\n[//]: # (b1)\n```javascript\nconst Redis = require('@quilt/redis');\nlet redis = new Redis(2, 'AUTH_PASSWORD'); // 2 Redis database replicas.\n```\n\nSet up a secure network.\n\n[//]: # (b1)\n```javascript\nallow(publicInternet, webGroup, 80); // Open the webservers' port 80 to the public internet.\nredis.allowFrom(webGroup, redis.port); // Let the web app communicate with Redis.\n```\n\nDeploy VMs on any [supported cloud provider](#deploy-quickly-on).\n\n[//]: # (b1)\n```javascript\nlet vm = new Machine({\n  provider: 'Amazon',\n  size: 't2.micro'\n});\n```\n\nSee [full example blueprints](https://github.com/quilt/) and [check out our docs](http://docs.quilt.io).\n\n## Quilt CLI\n\n```bash\n# Deploy your application.\n$ quilt run ./someBlueprint.js\n\n# SSH into VMs and containers.\n$ quilt ssh <ID>\n\n# Check the status of your deployment.\n$ quilt show\n```\n\nThis is just a small sample of the Quilt CLI. [Check out more handy commands](http://docs.quilt.io/#quilt-cli) for managing your deployment.\n\n## Get Started\n\n* Get started with [our **tutorial**](http://docs.quilt.io/#getting-started)\n* Check out [our **docs**](http://docs.quilt.io/)\n* [**Contribute** to the project](http://docs.quilt.io/#developing-quilt)\n* Learn more on our [**website**](http://quilt.io)\n* [**Get in touch!**](http://quilt.io/#contact)\n\nWe would love to hear if you have any questions, suggestions, or other comments!\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "mocha ./blueprint ./cli/command/init/"
  },
  "version": "0.4.0"
}
